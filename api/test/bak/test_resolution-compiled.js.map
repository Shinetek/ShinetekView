{"version":3,"sources":["test_resolution.js"],"names":[],"mappings":"AAAA;;;AAGA,IAAI,iBAAiB,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,SAAnC,EAA8C,UAA9C,EAA0D,WAA1D,EAAuE,YAAvE,EAAqF,aAArF,CAArB;;AAEA,IAAI,gBAAgB,CAAC,QAAD,EAAW,SAAX,EAAsB,UAAtB,EAAkC,WAAlC,EAA+C,YAA/C,EAA6D,iBAAiB,CAA9E,EAAiF,cAAjF,EAAiG,eAAjG,EAAkH,gBAAlH,EAAoI,mBAAmB,CAAvJ,CAApB;AACA,IAAI,YAAY,GAAhB;AACA,QAAQ,GAAR,CAAY,OAAZ;AACA,QAAQ,GAAR,CAAY,aAAZ;AACA;;;;;;;;;;;;;;;;;;AAkBA,IAAI,SAAS,QAAb;AACA,IAAI,UAAU,CAAd;AACA,IAAI,UAAU,CAAd;AACA,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA4B;;AAExB,MAAI,MAAM,CAAV;AACA,UAAQ,GAAR,CAAY,MAAM,GAAN,GAAY,OAAZ,GAAsB,MAAlC;AACA,UAAQ,GAAR,CAAY,MAAM,GAAN,GAAY,WAAZ,GAA0B,OAA1B,GAAoC,KAApC,GAA4C,OAAxD;AACA,UAAQ,GAAR,CAAY,MAAM,GAAN,GAAY,WAAZ,GAA0B,UAAU,GAApC,GAA0C,KAA1C,GAAkD,UAAU,GAAxE;AACA,WAAS,SAAS,CAAlB;AACA,YAAU,UAAU,CAApB;AACA,YAAU,UAAU,CAApB;AACH","file":"test_resolution-compiled.js","sourcesContent":["/**\r\n * Created by lenovo on 2017/6/5.\r\n */\r\nvar m_resolutions1 = [0.625, 0.3125, 0.15625, 0.078125, 0.0390625, 0.01953125, 0.009765625, 0.0048828125, 0.00244140625];\r\n\r\nvar m_resolutions = [0.703125, 0.3515625, 0.17578125, 0.087890625, 0.0439453125, 0.010986328125 * 2, 0.010986328125, 0.0054931640625, 0.00274658203125, 0.00274658203125 / 2];\r\nvar tile_size = 256;\r\nconsole.log(\"当前分辨率\");\r\nconsole.log(m_resolutions);\r\n/*\r\n for (var i = 0; i < m_resolutions.length; i++) {\r\n var m_re = m_resolutions[i];\r\n var z = i;\r\n var x = 360 / (m_re * tile_size);\r\n var y = 180 / (m_re * tile_size);\r\n console.log(\"z:\" + z + \" x:\" + x + \" y:\" + y);\r\n if (i > 4) {\r\n //5层以上\r\n var m_10Width = 1000;\r\n var m_index_X = 360 / x / 10;\r\n var m_index_Y = 180 / y / 10;\r\n console.log(\"z:\" + z + \" 每一块代表度数:\" + 360 / x);\r\n console.log(\"z:\" + z + \" x_10度块个数:\" + m_index_X + \" y_10度块个数:\" + m_index_Y);\r\n }\r\n }\r\n */\r\n\r\nvar m_Base = 0.703125;\r\nvar m_xFile = 2;\r\nvar m_yFile = 1;\r\nfor (var i = 0; i < 9; i++) {\r\n\r\n    var m_x = i;\r\n    console.log(\"第\" + m_x + \"层分辨率：\" + m_Base);\r\n    console.log(\"第\" + m_x + \"层 个数 : x:\" + m_xFile + \" y:\" + m_yFile);\r\n    console.log(\"第\" + m_x + \"层 宽度 : x:\" + m_xFile * 256 + \" y:\" + m_yFile * 256);\r\n    m_Base = m_Base / 2;\r\n    m_xFile = m_xFile * 2;\r\n    m_yFile = m_xFile * 2;\r\n}"]}