{"version":3,"sources":["datalist-handler.js"],"names":[],"mappings":"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","file":"datalist-handler-compiled.js","sourcesContent":["/**\r\n * Created by FanTaSyLin on 2016/12/12\r\n *\r\n * 提供获取数据列表的API\r\n */\r\n\r\n\r\n/// <reference path=\"./../../typings/index.d.ts\" />\r\nvar moment = require('moment');\r\nvar FTP = require('ftp');\r\nvar _ = require('lodash');\r\nvar mysql = require('mysql');\r\nvar config = require('../config.json');\r\nvar fs = require(\"fs\");\r\nvar concat = require('concat-stream');\r\n\r\n(function () {\r\n\r\n\r\n    module.exports = function (server, BASEPATH) {\r\n\r\n        /**\r\n         * 获取数据列表\r\n         */\r\n        server.get({\r\n            \"path\": BASEPATH + '/data-list',\r\n            \"verison\": '0.0.1'\r\n        }, _getDataList);\r\n\r\n        //静止卫星从数据库中获取\r\n        server.get({\r\n            \"path\": BASEPATH + '/datalist/:SatID/:InstID/:ProdName/:Resolution',\r\n            \"verison\": '0.0.1'\r\n        }, _getDataListByCondition);\r\n\r\n        //日合成产品数据获取 以天为基准 向上向下兼容\r\n        server.get({\r\n            \"path\": BASEPATH + '/datalistday/:SatID/:InstID/:ProdName/:Resolution',\r\n            \"verison\": '0.0.1'\r\n        }, _getDataListByConditionDay);\r\n\r\n        //极轨卫星从文件中获取 FTPFileName 参数 为FTP上文件名称\r\n        server.get({\r\n            \"path\": BASEPATH + '/datalist/POS/:FTPFileName',\r\n            \"verison\": '0.0.1'\r\n        }, _getDataLitsByFTPFile);\r\n\r\n        //日合成产品数据获取 以天为基准 向上向下兼容\r\n        server.get({\r\n            \"path\": BASEPATH + '/datalistfy4a/:SatID/:InstID/:ProdName/:ObserveType/:Resolution',\r\n            \"verison\": '0.0.1'\r\n        }, _getDataListByFY4A);\r\n\r\n        //日合成产品数据获取 以天为基准 向上向下兼容\r\n        server.get({\r\n            \"path\": BASEPATH + '/datalistfy4a/:SatID/:InstID/:ProdName/:Resolution',\r\n            \"verison\": '0.0.1'\r\n        }, _getDataListByFY4A_all);\r\n\r\n        //从本地文件中获取！POS极轨卫星\r\n        server.get({\r\n            \"path\": BASEPATH + '/datalist/POSFile/:FTPFileName',\r\n            \"verison\": '0.0.1'\r\n        }, _getDataListFilePath);\r\n    };\r\n\r\n    //测试数据返回\r\n    function _getDataList(req, res, next) {\r\n        //临时\r\n        var dataList = [];\r\n        var tmpStr = moment(new Date()).add('hour', -8).format('YYYY-MM-DD HH');\r\n        var start = new Date(tmpStr + ':00');\r\n        for (var i = 0; i < 20; i++) {\r\n            dataList.push(moment(start).add('minutes', -10 * i).format('YYYY-MM-DD HH:mm'));\r\n        }\r\n\r\n        var result = {\r\n            \"dataList_Minute\": dataList,\r\n            \"dataList_Day\": [],\r\n            \"dataList_Month\": [],\r\n            \"dataList_Year\": []\r\n        };\r\n\r\n        res.end(JSON.stringify(result));\r\n        next();\r\n\r\n    }\r\n\r\n    //静止卫星获取数据 FY4A 分钟版本\r\n    function _getDataListByCondition(req, res, next) {\r\n\r\n        if (_.isUndefined(req.params.SatID)\r\n            || _.isUndefined(req.params.InstID)\r\n            || _.isUndefined(req.params.ProdName)\r\n            || _.isUndefined(req.params.Resolution)) {\r\n            res.end(\"请确认参数如下格式：/datalist/:SatID/:InstID/:ProdName/:Resolution\"\r\n                + \"1SatID:\" + req.params.SatID\r\n                + \"2InstID:\" + req.params.InstID\r\n                + \"3ProdName:\" + req.params.ProdName\r\n                + \"4Resolution:\" + req.params.Resolution);\r\n            next();\r\n        }\r\n        //获取Select 语句\r\n        var _SQL = \" SELECT  DISTINCT(DataTime) FROM ProductInfo  \" +\r\n            \" where  SatID ='\" + req.params.SatID\r\n            + \"' and InstrumentName ='\" + req.params.InstID\r\n            + \"' and ProductName ='\" + req.params.ProdName\r\n            + \"' and Resolution =\" + req.params.Resolution\r\n            + \" and IsExitFlag = 1 order by CreatTime desc\"\r\n            + \" limit 1000\";\r\n\r\n        var client = mysql.createConnection({\r\n            \"host\": config.MYSQL.host,\r\n            \"user\": config.MYSQL.user,\r\n            \"password\": config.MYSQL.password,\r\n            \"database\": config.MYSQL.database\r\n        });\r\n\r\n        client.connect();\r\n        client.query(_SQL, function selectCb(err, results) {\r\n                if (err) {\r\n                    // throw err;\r\n                    res.end(JSON.stringify(err));\r\n                    next();\r\n                }\r\n                if (results) {\r\n\r\n\r\n                    var DataListALL = _getDataListByDataLength(results);\r\n                    var dataList_Year = DataListALL.dataList_Year;\r\n                    var dataList_Month = DataListALL.dataList_Month;\r\n                    var dataList_Day = DataListALL.dataList_Day;\r\n                    var dataList_Min = DataListALL.dataList_Min;\r\n\r\n                    dataList_Min = _.sortBy(dataList_Min);\r\n                    dataList_Day = _.uniq(dataList_Day);\r\n                    dataList_Month = _.uniq(dataList_Month);\r\n                    dataList_Year = _.uniq(dataList_Year);\r\n                    //整体加入完成后返回\r\n                    var result = {\r\n                        \"dataList_Minute\": dataList_Min,\r\n                        \"dataList_Day\": dataList_Day,\r\n                        \"dataList_Month\": dataList_Month,\r\n                        \"dataList_Year\": dataList_Year\r\n                    };\r\n\r\n                    res.end(JSON.stringify(result));\r\n                    next();\r\n                }\r\n                client.end();\r\n            }\r\n        );\r\n        client.on('error', function (err) {\r\n            if (err) {\r\n                client.end();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    //从本地文件目录中获取 数据存在 TXT 文件\r\n    function _getDataListByConditionDay(req, res, next) {\r\n\r\n        if (_.isUndefined(req.params.SatID)\r\n            || _.isUndefined(req.params.InstID)\r\n            || _.isUndefined(req.params.ProdName)\r\n            || _.isUndefined(req.params.Resolution)) {\r\n            res.end(\"请确认参数如下格式：/datalist/:SatID/:InstID/:ProdName/:Resolution。\"\r\n                + \"1SatID:\" + req.params.SatID\r\n                + \"2InstID:\" + req.params.InstID\r\n                + \"3ProdName:\" + req.params.ProdName\r\n                + \"4Resolution:\" + req.params.Resolution);\r\n            next();\r\n        }\r\n        //获取Select 语句\r\n        var _SQL = \" SELECT  DISTINCT(DataTime) FROM ProductInfo  \"\r\n            + \" where  SatID ='\" + req.params.SatID\r\n            + \"' and InstrumentName ='\" + req.params.InstID\r\n            + \"' and ProductName ='\" + req.params.ProdName\r\n            + \"' and Resolution =\" + req.params.Resolution\r\n            + \" and IsExitFlag = 1 order by CreatTime desc\"\r\n            + \" limit 1000\";\r\n\r\n        var client = mysql.createConnection({\r\n            \"host\": config.MYSQL.host,\r\n            \"user\": config.MYSQL.user,\r\n            \"password\": config.MYSQL.password,\r\n            \"database\": config.MYSQL.database\r\n        });\r\n\r\n        client.connect();\r\n        client.query(_SQL, function selectCb(err, results) {\r\n                if (err) {\r\n                    //throw err;\r\n                    res.end(JSON.stringify(err));\r\n                    next();\r\n                }\r\n                if (results) {\r\n                    var dataList_Min = [];\r\n                    var dataList_Day = [];\r\n                    var dataList_Month = [];\r\n                    var dataList_Year = [];\r\n                    console.log(results.length);\r\n\r\n                    var DataListALL = _getDataListByDataLength(results);\r\n                    dataList_Year = DataListALL.dataList_Year;\r\n                    dataList_Month = DataListALL.dataList_Month;\r\n                    dataList_Day = DataListALL.dataList_Day;\r\n\r\n                    dataList_Year = _.uniq(dataList_Year);\r\n                    dataList_Month = _.uniq(dataList_Month);\r\n                    dataList_Day = _.uniq(dataList_Day);\r\n                    //将以年为单位的时间 扩充为分钟\r\n                    dataList_Day.forEach(function (_StrDay) {\r\n                        //扩充为分钟 一天为288个时次\r\n                        for (var time = 0; time < 288; time++) {\r\n                            var m_Str_Min = moment(new Date(_StrDay)).utc().add('minutes', 5 * time).format('YYYY-MM-DD HH:mm');\r\n                            dataList_Min.push(m_Str_Min);\r\n                        }\r\n                    });\r\n                    dataList_Min = _.uniq(dataList_Min);\r\n                    dataList_Min = _.sortBy(dataList_Min);\r\n                    //整体加入完成后返回\r\n                    var result = {\r\n                        \"dataList_Minute\": dataList_Min,\r\n                        \"dataList_Day\": dataList_Day,\r\n                        \"dataList_Month\": dataList_Month,\r\n                        \"dataList_Year\": dataList_Year\r\n                    };\r\n\r\n                    res.end(JSON.stringify(result));\r\n                    next();\r\n                }\r\n                client.end();\r\n            }\r\n        );\r\n        client.on('error', function (err) {\r\n            if (err) {\r\n                client.end();\r\n            } else {\r\n                client.end();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    //极轨卫星-数据存在文件 FTP配置\r\n    var FTPConfig = {\r\n        'host': config.POS_FTP.host,\r\n        'port': config.POS_FTP.port,\r\n        'user': config.POS_FTP.user,\r\n        'password': config.POS_FTP.password\r\n    };\r\n\r\n    //极轨卫星通过FTP 文件获取数据存在 使用路径为当前路径\r\n    //http://10.24.4.130:4001/api/datalist/POS/liuyptest.txt\r\n    function _getDataLitsByFTPFile(req, res, next) {\r\n        var FtpPath = config.POS_FTP.path;\r\n        var m_FileName = req.params.FTPFileName;\r\n        //如果合法则进行操作\r\n        if (!_.isUndefined(m_FileName) && m_FileName.length > 0) {\r\n            var client = new FTP();\r\n            client.on('ready', function () {\r\n                    client.get(FtpPath + m_FileName,\r\n                        function (err, stream) {\r\n                            if (err) {\r\n                                client.end();\r\n                                res.end();\r\n                                next();\r\n                                return;\r\n                            }\r\n                            stream.once('close', function () {\r\n                                client.end();\r\n                            });\r\n\r\n                            //对流进行处理函数\r\n                            var reverseStream = concat(function (text) {\r\n                                //  var _DataList1 = text.toString();\r\n                                //将日期分割为列表形式\r\n                                var _DataList = text.toString().split(\"\\n\\r\\n\");\r\n                                var dataList_Min = [];\r\n                                var dataList_Day = [];\r\n                                var dataList_Month = [];\r\n                                var dataList_Year = [];\r\n                                if (_DataList && _DataList.length > 0) {\r\n\r\n                                    //循环添加\r\n                                    for (var len = 0; len < _DataList.length; len++) {\r\n                                        var _Item = _DataList[len];\r\n                                        if (_Item.length === 8) {\r\n                                            //切割加入年月日\r\n                                            //年\r\n                                            var _StrYear = _Item.substring(0, 4);\r\n                                            dataList_Year.push(_StrYear);\r\n                                            //月\r\n                                            var _StrMonth = _Item.substr(0, 4) + \"-\" + parseInt(_Item.substr(4, 2)).toString();\r\n                                            dataList_Month.push(_StrMonth);\r\n                                            //日\r\n                                            var _StrDay = _Item.substr(0, 4) + \"-\" + _Item.substr(4, 2) + \"-\" + _Item.substr(6, 2);\r\n                                            dataList_Day.push(_StrDay);\r\n                                        }\r\n                                    }\r\n                                    //去重复 年月日 去重复\r\n                                    dataList_Day = _.uniq(dataList_Day);\r\n                                    dataList_Month = _.uniq(dataList_Month);\r\n                                    dataList_Year = _.uniq(dataList_Year);\r\n                                    //对每日的数据进行处理扩充为分钟模式 针对去重复后的进行 减少计算次数\r\n                                    dataList_Day.forEach(function (_DayStr) {\r\n                                        //扩充为分钟 一天为288个时次\r\n                                        for (var time = 0; time < 288; time++) {\r\n                                            var m_Str_Min = moment(new Date(_DayStr)).utc().add('minutes', 5 * time).format('YYYY-MM-DD HH:mm');\r\n                                            dataList_Min.push(m_Str_Min);\r\n                                        }\r\n                                    });\r\n\r\n                                    //整体加入完成后返回\r\n                                    var result = {\r\n                                        \"dataList_Minute\": dataList_Min,\r\n                                        \"dataList_Day\": dataList_Day,\r\n                                        \"dataList_Month\": dataList_Month,\r\n                                        \"dataList_Year\": dataList_Year\r\n                                    };\r\n                                    //console.log(result);\r\n                                    res.end(JSON.stringify(result));\r\n                                    next();\r\n                                }\r\n                            });\r\n                            stream.pipe(reverseStream);\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n            client.on('error', function (err) {\r\n                if (err) {\r\n                    client.end();\r\n                }\r\n            });\r\n            client.connect(FTPConfig);\r\n        } else {\r\n            //若参数错误\r\n            res.end();\r\n            next();\r\n        }\r\n    }\r\n\r\n\r\n    //从本地文件中获取数据存在状态\r\n    function _getDataListFilePath(req, res, next) {\r\n        var _Path = config.POSFilePath;\r\n\r\n        var m_FileName = req.params.FTPFileName;\r\n        var m_File = _Path + \"/\" + m_FileName;\r\n\r\n        // m_File = \"D://File_2017//GIT//ShinetekView-app//api//test//\" + m_FileName;\r\n\r\n        if (fs.existsSync(m_File)) {\r\n            //文件读取\r\n            var m_FileStr = fs.readFileSync(m_File, 'utf8');\r\n\r\n            var _DataList = m_FileStr.toString().split(\"\\u0000\\n\\u0000\");\r\n            _DataList = _.uniq(_DataList);\r\n            var dataList_Min = [];\r\n            var dataList_Day = [];\r\n            var dataList_Month = [];\r\n            var dataList_Year = [];\r\n            if (_DataList && _DataList.length > 0) {\r\n                //循环添加\r\n                for (var len = 0; len < _DataList.length; len++) {\r\n                    var _Item = _DataList[len];\r\n                    if (_Item.length === 8) {\r\n                        //切割加入年月日\r\n                        //年\r\n                        var _StrYear = _Item.substring(0, 4);\r\n                        dataList_Year.push(_StrYear);\r\n                        //月\r\n                        var _StrMonth = _Item.substr(0, 4) + \"-\" + parseInt(_Item.substr(4, 2)).toString();\r\n                        dataList_Month.push(_StrMonth);\r\n                        //日\r\n                        var _StrDay = _Item.substr(0, 4) + \"-\" + _Item.substr(4, 2) + \"-\" + _Item.substr(6, 2);\r\n                        dataList_Day.push(_StrDay);\r\n                    }\r\n                }\r\n                //去重复 年月日 去重复\r\n                dataList_Day = _.uniq(dataList_Day);\r\n                dataList_Month = _.uniq(dataList_Month);\r\n                dataList_Year = _.uniq(dataList_Year);\r\n                //对每日的数据进行处理扩充为分钟模式 针对去重复后的进行 减少计算次数\r\n                dataList_Day.forEach(function (DayItemStr) {\r\n                    //扩充为分钟 一天为288个时次\r\n                    for (var time = 0; time < 288; time++) {\r\n                        var m_Str_Min = moment(new Date(DayItemStr)).utc().add('minutes', 5 * time).format('YYYY-MM-DD HH:mm');\r\n                        dataList_Min.push(m_Str_Min);\r\n                    }\r\n                });\r\n\r\n                //整体加入完成后返回\r\n                var result = {\r\n                    \"dataList_Minute\": dataList_Min,\r\n                    \"dataList_Day\": dataList_Day,\r\n                    \"dataList_Month\": dataList_Month,\r\n                    \"dataList_Year\": dataList_Year\r\n                };\r\n                res.end(JSON.stringify(result));\r\n                next();\r\n            }\r\n        } else {\r\n            res.end();\r\n            next();\r\n        }\r\n    }\r\n\r\n    //http://10.24.4.121:4001/api/datalistfy4a/FY4A/AGRIX/PRJ/TEST/1000\r\n    function _getDataListByFY4A(req, res, next) {\r\n        //从数据库中获取 FY4A版本 的 全状态数据 。\r\n        if (_.isUndefined(req.params.SatID)\r\n            || _.isUndefined(req.params.InstID)\r\n            || _.isUndefined(req.params.ProdName)\r\n            || _.isUndefined(req.params.Resolution)\r\n            || _.isUndefined(req.params.ObserveType)) {\r\n            res.end(\"请确认参数如下格式：/datalist/:SatID/:InstID/:ProdName/:ObserveType/:Resolution\"\r\n                + \"1SatID:\" + req.params.SatID\r\n                + \"2InstID:\" + req.params.InstID\r\n                + \"3ProdName:\" + req.params.ProdName\r\n                + \"4ObserveType:\" + req.params.ObserveType\r\n                + \"5Resolution:\" + req.params.Resolution);\r\n            next();\r\n        }\r\n        //获取Select 语句\r\n        var _SQL = \" SELECT  * FROM ProductInfo  \" +\r\n            \" where  SatID ='\" + req.params.SatID\r\n            + \"' and InstrumentName ='\" + req.params.InstID\r\n            + \"' and ProductName ='\" + req.params.ProdName\r\n            + \"' and Resolution =\" + req.params.Resolution\r\n            + \" and ObserveType ='\" + req.params.ObserveType\r\n            + \"' and IsExitFlag = 1 order by CreatTime desc\"\r\n            + \" limit 1000\";\r\n        console.log(_SQL);\r\n\r\n        var client = mysql.createConnection({\r\n            \"host\": config.MYSQL.host,\r\n            \"user\": config.MYSQL.user,\r\n            \"password\": config.MYSQL.password,\r\n            \"database\": config.MYSQL.database\r\n        });\r\n        client.connect();\r\n        client.query(_SQL, function selectCb(err, results) {\r\n                if (err) {\r\n                    res.end(JSON.stringify(err));\r\n                    next();\r\n                }\r\n                if (results) {\r\n                    var DataList = results;\r\n                    var DataListRteturn = [];\r\n                    var FYA_Handler = require(\"../modules/fy4_datainfo_module.js\");\r\n                    DataListRteturn = FYA_Handler.getDataInfo(DataList);\r\n                    /*  if (DataList && DataList.length > 0) {\r\n                     DataList.forEach(function (DataItem) {\r\n                     var DemoReturn = {};\r\n                     if (DataItem.StartTime && DataItem.EndTime) {\r\n                     var DataBeginTime = DataItem.StartTime.toString();\r\n                     var DataEndTime = DataItem.EndTime.toString();\r\n                     //格式转化\r\n                     var DataBeginTimem = moment.utc(DataBeginTime, \"YYYYMMDDHHmmss\");\r\n                     var DataEndTimem = moment.utc(DataEndTime, \"YYYYMMDDHHmmss\");\r\n                     DemoReturn.BeginTime = DataBeginTimem.format(\"YYYY-MM-DD HH:mm:ss\");\r\n                     DemoReturn.EndTime = DataEndTimem.format(\"YYYY-MM-DD HH:mm:ss\");\r\n                     //对年月日时分秒 进行 判定\r\n                     if (DemoReturn.BeginTime !== 'Invalid date' && DemoReturn.EndTime !== 'Invalid date') {\r\n                     //加入处理\r\n                     DataListRteturn.push(DemoReturn);\r\n                     }\r\n                     }\r\n                     });\r\n                     }*/\r\n                    res.end(JSON.stringify(DataListRteturn));\r\n                    next();\r\n                }\r\n                client.end();\r\n            }\r\n        );\r\n        client.on('error', function (err) {\r\n            if (err) {\r\n                client.end();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    function _getDataListByFY4A_all(req, res, next) {\r\n        //从数据库中获取 FY4A版本 的 全状态数据 。\r\n        if (_.isUndefined(req.params.SatID)\r\n            || _.isUndefined(req.params.InstID)\r\n            || _.isUndefined(req.params.ProdName)\r\n            || _.isUndefined(req.params.Resolution)\r\n        ) {\r\n            res.end(\"请确认参数如下格式：/datalist/:SatID/:InstID/:ProdName/:ObserveType/:Resolution\"\r\n                + \"1SatID:\" + req.params.SatID\r\n                + \"2InstID:\" + req.params.InstID\r\n                + \"3ProdName:\" + req.params.ProdName\r\n                + \"5Resolution:\" + req.params.Resolution);\r\n            next();\r\n        }\r\n        //获取Select 语句\r\n        var _SQL = \" SELECT  * FROM ProductInfo  \" +\r\n            \" where  SatID ='\" + req.params.SatID\r\n            + \"' and InstrumentName ='\" + req.params.InstID\r\n            + \"' and ProductName ='\" + req.params.ProdName\r\n            + \"' and Resolution =\" + req.params.Resolution\r\n            + \" and IsExitFlag = 1 order by CreatTime desc\"\r\n            + \" limit 1000\";\r\n        console.log(_SQL);\r\n\r\n        var client = mysql.createConnection({\r\n            \"host\": config.MYSQL.host,\r\n            \"user\": config.MYSQL.user,\r\n            \"password\": config.MYSQL.password,\r\n            \"database\": config.MYSQL.database\r\n        });\r\n        client.connect();\r\n        client.query(_SQL, function selectCb(err, results) {\r\n                if (err) {\r\n                    res.end(JSON.stringify(err));\r\n                    next();\r\n                }\r\n                if (results) {\r\n                    var DataList = results;\r\n                    var DataListRteturn = [];\r\n                    var FYA_Handler = require(\"../modules/fy4_datainfo_module.js\");\r\n                    DataListRteturn = FYA_Handler.getDataInfo(DataList);\r\n                    /*  if (DataList && DataList.length > 0) {\r\n                     DataList.forEach(function (DataItem) {\r\n                     var DemoReturn = {};\r\n                     if (DataItem.StartTime && DataItem.EndTime) {\r\n                     var DataBeginTime = DataItem.StartTime.toString();\r\n                     var DataEndTime = DataItem.EndTime.toString();\r\n                     //格式转化\r\n                     var DataBeginTimem = moment.utc(DataBeginTime, \"YYYYMMDDHHmmss\");\r\n                     var DataEndTimem = moment.utc(DataEndTime, \"YYYYMMDDHHmmss\");\r\n                     DemoReturn.BeginTime = DataBeginTimem.format(\"YYYY-MM-DD HH:mm:ss\");\r\n                     DemoReturn.EndTime = DataEndTimem.format(\"YYYY-MM-DD HH:mm:ss\");\r\n                     //对年月日时分秒 进行 判定\r\n                     if (DemoReturn.BeginTime !== 'Invalid date' && DemoReturn.EndTime !== 'Invalid date') {\r\n                     //加入处理\r\n                     DataListRteturn.push(DemoReturn);\r\n                     }\r\n                     }\r\n                     });\r\n                     }*/\r\n                    res.end(JSON.stringify(DataListRteturn));\r\n                    next();\r\n                }\r\n                client.end();\r\n            }\r\n        );\r\n        client.on('error', function (err) {\r\n            if (err) {\r\n                client.end();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取数据字段 根据 长度\r\n     * @private\r\n     */\r\n    function _getDataListByDataLength(results) {\r\n        var dataList_Year = [];\r\n        var dataList_Month = [];\r\n        var dataList_Day = [];\r\n        var dataList_Min = [];\r\n        for (var i = 0; i < results.length; i++) {\r\n            //加入数据\r\n            var _Item = results[i].DataTime;\r\n            switch (_Item.length) {\r\n                case 4:\r\n                {\r\n                    //年\r\n                    dataList_Year.push(_getTimeStrFormDataTime(_Item, 'year'));\r\n                    break;\r\n                }\r\n                case 6:\r\n                {\r\n                    dataList_Year.push(_getTimeStrFormDataTime(_Item, 'year'));\r\n                    dataList_Month.push(_getTimeStrFormDataTime(_Item, 'month'));\r\n                    break;\r\n                }\r\n                case 8:\r\n                {\r\n                    dataList_Year.push(_getTimeStrFormDataTime(_Item, 'year'));\r\n                    dataList_Month.push(_getTimeStrFormDataTime(_Item, 'month'));\r\n                    dataList_Day.push(_getTimeStrFormDataTime(_Item, 'day'));\r\n                    break;\r\n                }\r\n                case 13:\r\n                {\r\n                    dataList_Year.push(_getTimeStrFormDataTime(_Item, 'year'));\r\n                    dataList_Month.push(_getTimeStrFormDataTime(_Item, 'month'));\r\n                    dataList_Day.push(_getTimeStrFormDataTime(_Item, 'day'));\r\n                    dataList_Min.push(_getTimeStrFormDataTime(_Item, 'minute'));\r\n                    break;\r\n                }\r\n                default:\r\n                {\r\n                    // console.log(_Item);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            \"dataList_Year\": dataList_Year,\r\n            \"dataList_Month\": dataList_Month,\r\n            \"dataList_Day\": dataList_Day,\r\n            \"dataList_Min\": dataList_Min\r\n        };\r\n    }\r\n\r\n    function _getTimeStrFormDataTime(timeStr, timeMode) {\r\n        var returnTimeStr = '';\r\n        switch (timeMode) {\r\n            case  \"year\":\r\n            {\r\n                returnTimeStr = timeStr.substring(0, 4);\r\n                break;\r\n            }\r\n            case  \"month\":\r\n            {\r\n                returnTimeStr = timeStr.substr(0, 4) + \"-\" + parseInt(timeStr.substr(4, 2)).toString();\r\n\r\n                break;\r\n            }\r\n            case  \"day\":\r\n            {\r\n\r\n                returnTimeStr = timeStr.substr(0, 4) + \"-\" + timeStr.substr(4, 2) + \"-\" + timeStr.substr(6, 2);\r\n\r\n                break;\r\n            }\r\n            case  \"minute\":\r\n            {\r\n                returnTimeStr = timeStr.substr(0, 4) + \"-\" + timeStr.substr(4, 2) + \"-\" + timeStr.substr(6, 2)\r\n                    + \" \" + timeStr.substr(9, 2) + \":\" + timeStr.substr(11, 2);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        return returnTimeStr;\r\n\r\n    }\r\n})\r\n();\r\n\r\n"]}