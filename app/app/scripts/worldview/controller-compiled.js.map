{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by FanTaSyLin on 2016/10/18.\r\n */\r\n\r\n(function () {\r\n\r\n    \"use strict\";\r\n\r\n    angular.module(\"Worldview\")\r\n        .controller(\"WorldviewController\", WorldviewController);\r\n\r\n    WorldviewController.$inject = [\"WorldviewServices\", \"$cookies\"];\r\n\r\n    function WorldviewController(WorldviewServices, $cookies) {\r\n\r\n        var self = this;\r\n        var BASEINDEXFORBASE = 100; //基础图层的基准z-index\r\n        var BASEINDEXFOROVER = 300; //产品图层的基准z-index\r\n        var projectList = [];\r\n\r\n        //数据存在列表 - 维护所有分钟间隔产品的数组\r\n        var timeLineListDataAll = [];\r\n\r\n        var timeLine = new TimeLine();\r\n        var layerMenu = angular.element(document.getElementById(\"layerMenu\"));\r\n        var timeLineElm = angular.element(document.getElementById(\"timeLine\"));\r\n        var sliderFps = angular.element(document.getElementById(\"slider-fps\")).slider();\r\n        /*var overlaysZone = angular.element(document.getElementById('overlays-zone'));*/\r\n\r\n        self.currentTab = \"Layer\";\r\n        // self.currentTab_LayerMenuModal = {};\r\n        self.overLays = [];\r\n        self.baseLays = [];\r\n        /**标记菜单是否折叠 0 显示 1 隐藏 2动画模式 20170517*/\r\n        self.isMenuCollapse = 0;\r\n        /*top tab group list*/\r\n        self.tabGroups = [];\r\n        self.currentTabGroup = {};\r\n        /*模态框中的 灾害类图层分组列表*/\r\n        //self.allLayGroups_POS = [];\r\n        /*模态框中的 科研类图层分组列表*/\r\n        //self.allLayGroups_GEO = [];\r\n\r\n        /*模态框中的 常用图层列表*/\r\n        self.frequentlyLayers = [];\r\n        self.animation = {};\r\n        //timeStr = \"\";\r\n        //self.animationprojectName = \"\";\r\n\r\n        /*模态框中的 数据排列形式  Collapse  Tile*/\r\n        self.layerMenuType = \"Tile\";\r\n        /*模态框 面包屑导航条 当前产品组*/\r\n        self.currentGroup = {};\r\n        self.currentLayer = {};\r\n        self.currentInst = {};\r\n        /*是否显示video面板*/\r\n        self.isShownVideoPanel = false;\r\n\r\n        /*video帧频*/\r\n        self.fpsNum = 2;\r\n        /*video play 标识: -1 stop; 0 pause; 1 play*/\r\n        self.isVideoPlayed = -1;\r\n        /*video 循环 标识*/\r\n        self.isLooped = true;\r\n        /*video latest24 标识*/\r\n        self.isLatest24 = false;\r\n        /*首个标记为显示的图层*/\r\n        self.topsideLayer = null;\r\n        /** 所有标记为显示的图层 */\r\n        self.sideLayers = [];\r\n        /** 临时记录获取到的 m_timeLineList */\r\n        self.tmpTimeLineList = [];\r\n        /*video 动画起始时间*/\r\n        self.videoStartTime = moment(new Date());\r\n        /*video 动画结束时间*/\r\n        self.videoEndTime = moment(new Date());\r\n\r\n\r\n        /*功能标签选择*/\r\n        self.selectTab = _selectTab;\r\n        self.selectTab_LayerMenuModal = _selectTab_LayerMenuModal;\r\n        /*判断是否选中某个功能标签*/\r\n        self.isSelectedTab = _isSelectedTab;\r\n        self.isSelectedTab_LayerMenuModal = _isSelectedTab_LayerMenuModal;\r\n        /*折叠菜单栏*/\r\n        self.collapseMenu = _collapseMenu;\r\n        self.extendMenu = _extendMenu;\r\n\r\n        /*数据初始化*/\r\n        self.init = _init;\r\n        /*点击图层的眼睛 控制是否显示该图层*/\r\n        self.eyeClick = _eyeClick;\r\n        /*点击打开Layer选择菜单*/\r\n        self.showLayerMenu = _showLayerMenu;\r\n\r\n        // self.sortableOptions = _sortableOptions;\r\n        /*在模态框中选择了一个图层项*/\r\n        self.selectLayerItem = _selectLayerItem;\r\n        /*在layer之下选则仪器*/\r\n        self.selectInstonAboveLayer = _selectInstonAboveLayer;\r\n        self.isInstSelected = _isInstSelected;\r\n        /*添加产品到图层 （或者移除产品到图层）*/\r\n        self.addThisProject = _addThisProject;\r\n        /*移除选中的图层*/\r\n        self.removeThisLayer = _removeThisLayer;\r\n        /*打开video面板*/\r\n        self.showVideoPanel = _showVideoPanel;\r\n\r\n\r\n        /*播放video*/\r\n        self.playVideo = _playVideo;\r\n        /*停止video*/\r\n        self.stopVideo = _stopVideo;\r\n        /*设置video动画的时间范围*/\r\n        self.setVideoTimeRange = _setVideoTimeRange;\r\n        /*设置video动画播放最近24小时的数据*/\r\n        self.setVideoLatest24 = _setVideoLatest24;\r\n\r\n        /*   打开截图pannel*/\r\n        self.showScreenShots = _showScreenShots;\r\n\r\n        /*等待框显示*/\r\n        self.isWaitingShow = false;\r\n\r\n        /* 当前是否 3D模式*/\r\n        self.isShown3D = false;\r\n\r\n        /*用于显示当前动画状态*/\r\n        self.showAnimeTitle = \"\";\r\n\r\n        //关闭事件 调用刷新cookies\r\n        window.onbeforeunload = function (e) {\r\n            e = e || window.event;\r\n            //刷新图层cookies\r\n            _refreshLaysCookies();\r\n            return;\r\n        };\r\n\r\n        _init();\r\n\r\n        //时间轴控件发生日期改变时 重新加载所有图层\r\n        timeLineElm.on(\"DateTimeChange\", function (event, selectDate) {\r\n            //  _refreshLayers();\r\n            _reloadLayers();\r\n        });\r\n\r\n        /*帧频改变时 调整数值显示*/\r\n        sliderFps.on(\"slideStop\", function (slideEvt) {\r\n            angular.element(document.getElementById(\"slider-fps-num\")).text(slideEvt.value);\r\n            self.fpsNum = slideEvt.value;\r\n        });\r\n\r\n\r\n        /**\r\n         * 拖拽指令函数\r\n         *\r\n         * 不用function的形式 是因为 如果写成以下形式 则不会触发任何事件\r\n         * this.sortableOptions = _sortableOptions;\r\n         * function _sortableOptions() {\r\n         *     return {\r\n         *         stop: function (e, ui) {\r\n         *             alert(\"stop\");\r\n         *             _refreshLayers();\r\n         *         }\r\n         *     }\r\n         * }\r\n         */\r\n        self.sortableOptions = {\r\n            // 完成拖拽动作\r\n            stop: function (e, ui) {\r\n                //触发openlayer控件的刷新\r\n                _refreshLayers();\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * 停止播放动画\r\n         * 清除所有动画预加载图层\r\n         * @private\r\n         */\r\n        function _stopVideo() {\r\n            if (self.isVideoPlayed > -1) {\r\n                self.isVideoPlayed = -1;\r\n                var layerNames = _pauseAnime();\r\n                if (layerNames !== null && layerNames !== undefined) {\r\n                    layerNames.forEach(function (item) {\r\n                        ShinetekView.SatelliteView.removeLayer(item);\r\n                    });\r\n                }\r\n                //对opanlayer 中待加载的所有数值清零20170518\r\n                ShinetekView.SatelliteView.clearAnimate();\r\n            }\r\n            if (self.isMenuCollapse != 0) {\r\n                self.isMenuCollapse = 0;\r\n            }\r\n            if (self.isWaitingShow) {\r\n                self.isWaitingShow = false;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 设置video动画播放最近24小时的数据\r\n         * @private\r\n         */\r\n        function _setVideoLatest24() {\r\n            //1 设置标志, 时间范围区域 disable\r\n            //2 获取播放图层的数据列表\r\n            //3 根据最新数据计算动画的时间范围\r\n            //4 在timeline中设置播放范围\r\n            self.isLatest24 = !self.isLatest24;\r\n            if (self.isLatest24) {\r\n                if (self.baseLays.length < 1) return alert(\"请先添加一个产品\");\r\n                // self.topsideLayer = self.baseLays[0];\r\n                _getTopLayer();\r\n                self.videoStartTime = timeLine.getLatestDate(self.topsideLayer.projectName + self.topsideLayer._id, \"minute\").add(-24, \"h\");\r\n                self.videoEndTime = timeLine.getLatestDate(self.topsideLayer.projectName + self.topsideLayer._id, \"minute\");\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * 设置video动画的时间范围\r\n         * @param {String} unit 单位（Y=年; M=月; D=日)\r\n         * @param {String} opt 操作方式 (plus=加; minus=减)\r\n         * @param {Object} targetTime 目标时间\r\n         * @private\r\n         */\r\n        function _setVideoTimeRange(unit, opt, targetTime) {\r\n\r\n            if (self.isLatest24) return;\r\n\r\n            var x;\r\n            if (opt === 'plus') {\r\n                x = 1;\r\n            } else {\r\n                x = -1;\r\n            }\r\n            if (unit === 'm') {\r\n                x = 5 * x;\r\n            }\r\n            targetTime.add(x, unit)\r\n        }\r\n\r\n        /**\r\n         * 播放动画\r\n         * @private\r\n         */\r\n        function _playVideo() {\r\n            self.baseLays.forEach(function (layModule) {\r\n                //   _removeLayFromWMS(layModule);\r\n                _removeLayFromWMS_OnlyShow(layModule);\r\n            });\r\n            self.overLays.forEach(function (layModule) {\r\n                ShinetekView.SatelliteView.setZIndex(layModule._id, 30000);\r\n                //  _addLayToWMS(layModule);\r\n                //  tmpList.unshift(layModule);\r\n            });\r\n            //开始动画 隐藏菜单栏\r\n            self.isMenuCollapse = 2;\r\n            var orgFlg = self.isVideoPlayed;\r\n            if (self.baseLays.length < 1) return alert(\"请先添加一个产品\");\r\n\r\n\r\n            //  self.topsideLayer = self.baseLays[0];\r\n            if (orgFlg === -1 || orgFlg === 0) {\r\n                self.isVideoPlayed = 1;\r\n            } else if (orgFlg === 1) {\r\n                self.isVideoPlayed = 0;\r\n            }\r\n\r\n            if (orgFlg === -1 && self.isVideoPlayed === 1) {\r\n                //1 获取数据列表\r\n                //2 启动动画\r\n                _getTopLayer();\r\n                if (self.isLatest24) {\r\n                    _playLatestVideo(self.sideLayers, null, orgFlg);\r\n                } else {\r\n                    _playNextVideo(self.sideLayers, null, orgFlg);\r\n                }\r\n            } else if (orgFlg === 0 && self.isVideoPlayed === 1) {\r\n                //1 继续动画\r\n                if (self.isLatest24) {\r\n                    _playLatestVideo(self.sideLayers, null, orgFlg);\r\n                } else {\r\n                    _playNextVideo(self.sideLayers, null, orgFlg);\r\n                }\r\n\r\n            } else if (orgFlg === 1 && self.isVideoPlayed === 0) {\r\n                //1 暂停动画\r\n                _pauseAnime();\r\n                self.isMenuCollapse = 0;\r\n            }\r\n\r\n            /**\r\n             * 播放最新的video\r\n             * @param {Object} layerModule\r\n             * @param {String} layerName\r\n             * @param {Number} orgFlg\r\n             * @private\r\n             */\r\n            function _playLatestVideo(sideLayerModules, layerName, orgFlg) {\r\n                // if (self.baseLays.length < 1)\r\n                // return alert(\"请先添加一个产品\");\r\n                if (self.sideLayers.length === 0) {\r\n                    return alert(\"请先选择至少一个产品\");\r\n                }\r\n                // self.topsideLayer = self.baseLays[0];\r\n\r\n                //只有在停止的时候 -->暂停的时候 不进行最上层 查找转化\r\n                if (orgFlg != 0) {\r\n                    _getTopLayer();\r\n                }\r\n\r\n                if (layerName !== null) {\r\n                    ShinetekView.SatelliteView.removeLayer(layerName);\r\n                }\r\n\r\n                if (sideLayerModules !== undefined) {\r\n\r\n                    // _getDataExistList(layerModule, function (m_timeLineList) {\r\n                    //     timeLine.AddMinuteData(m_timeLineList);\r\n                    //     self.videoStartTime = timeLine.getLatestDate(self.topsideLayer.projectName + self.topsideLayer._id, \"minute\").add(-24, \"h\");\r\n                    //     self.videoEndTime = timeLine.getLatestDate(self.topsideLayer.projectName + self.topsideLayer._id, \"minute\");\r\n                    //     // var dateList = timeLine.getDataList(self.topsideLayer.projectName + self.topsideLayer._id, self.videoStartTime, self.videoEndTime, 'minute', self.topsideLayer.projectUrl);\r\n                    //    /**\r\n                    //      * 2017/11/4 范霖\r\n                    //      * 为了适应多个图层滚动播放的需求 现将dateList 由原来获取单个图层，改为获取所有sideLayers下的图层\r\n                    //     */\r\n                    //    var dateList = [];\r\n                    //    self.sideLayers.forEach(function(t) {\r\n                    //        dateList.push(timeLine.getDataList(t.projectName + t._id, self.videoStartTime, self.videoEndTime, 'minute', t.projectUrl));\r\n                    //     });\r\n                    //     var timespan = Math.floor(1000 / self.fpsNum);\r\n                    //     if (orgFlg === -1) {\r\n                    //         _initAnime(dateList);\r\n                    //     }\r\n                    //     _startAnime(timespan, function (err, layerName) {\r\n                    //         if (self.isLooped) {\r\n                    //             setTimeout(function () {\r\n                    //                 _playLatestVideo(layerModule, layerName, -1);\r\n                    //             }, 5000);\r\n                    //         }\r\n                    //     });\r\n                    // });\r\n                    var tmpList = [];\r\n                    sideLayerModules.forEach(function (item) {\r\n                        tmpList.push(item);\r\n                    });\r\n                    self.tmpTimeLineList = [];\r\n                    _getDataExistListByList(tmpList, function (m_timeLineList) {\r\n                        timeLine.AddMinuteData(m_timeLineList);\r\n                        self.videoStartTime = timeLine.getLatestDate(self.topsideLayer.projectName +\r\n                            self.topsideLayer._id, 'minute').add(-24, 'h');\r\n                        self.videoEndTime = timeLine.getLatestDate(self.topsideLayer.projectName +\r\n                            self.topsideLayer._id, 'minute');\r\n                        // var dateList = timeLine.getDataList(self.topsideLayer.projectName + self.topsideLayer._id, self.videoStartTime, self.videoEndTime, 'minute', self.topsideLayer.projectUrl);\r\n                        /**\r\n                         * 2017/11/4 范霖\r\n                         * 为了适应多个图层滚动播放的需求 现将dateList 由原来获取单个图层，改为获取所有sideLayers下的图层\r\n                         */\r\n                        var dateList = [];\r\n                        self.sideLayers.forEach(function (t) {\r\n                            dateList.push(\r\n                                timeLine.getDataList(t.projectName + t._id,\r\n                                    self.videoStartTime, self.videoEndTime,\r\n                                    'minute', t.projectUrl));\r\n                        });\r\n                        var timespan = Math.floor(1000 / self.fpsNum);\r\n                        if (orgFlg === -1) {\r\n                            _initAnime(dateList);\r\n                        }\r\n                        _startAnime(timespan, function (err, layerName) {\r\n                            if (self.isLooped) {\r\n                                setTimeout(function () {\r\n                                    _playLatestVideo(sideLayerModules, layerName,\r\n                                        -1);\r\n                                }, 5000);\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            /**\r\n             * 循环播放\r\n             * @param {Object} layerModule\r\n             * @param {String} layerName\r\n             * @param orgFlg\r\n             * @private\r\n             */\r\n            function _playNextVideo(sideLayerModules, layerName, orgFlg) {\r\n                //1 移除最后加载的图层\r\n                //2 重新读取控制参数\r\n                //3 播放动画\r\n                if (self.baseLays.length < 1)\r\n                    return alert(\"请先添加一个产品\");\r\n                //self.topsideLayer = self.baseLays[0];\r\n                //使用 函数查找最上面的可见图层\r\n                //只有在暂停的情况下 才不再次确认最新图层\r\n                if (orgFlg != 0) {\r\n                    _getTopLayer();\r\n                }\r\n                if (layerName !== null) {\r\n                    ShinetekView.SatelliteView.removeLayer(layerName);\r\n                }\r\n                // var dateList = timeLine.getDataList(self.topsideLayer.projectName + self.topsideLayer._id, self.videoStartTime, self.videoEndTime, 'minute', self.topsideLayer.projectUrl);\r\n                var dateList = [];\r\n                self.sideLayers.forEach(function (t) {\r\n                    dateList.push(timeLine.getDataList(t.projectName + t._id, self.videoStartTime, self.videoEndTime, 'minute', t.projectUrl));\r\n                });\r\n                var timespan = Math.floor(1000 / self.fpsNum);\r\n                if (orgFlg === -1) {\r\n                    _initAnime(dateList);\r\n                }\r\n                _startAnime(timespan, function (err, layerName) {\r\n                    if (self.isLooped) {\r\n                        setTimeout(function () {\r\n                            _playNextVideo(sideLayerModules, layerName, -1);\r\n                        }, 5000);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 显示video面板\r\n         */\r\n        function _showVideoPanel() {\r\n            self.isShownVideoPanel = !self.isShownVideoPanel;\r\n            //调用显示最新 24h\r\n            if (self.isShownVideoPanel && self.isLatest24) {\r\n                self.isLatest24 = !self.isLatest24;\r\n                _setVideoLatest24();\r\n            }\r\n            timeLine._ClickShowAndHide();\r\n        }\r\n\r\n        /**\r\n         * 显示截图面板 并向\r\n         * @private\r\n         */\r\n        function _showScreenShots() {\r\n            // self.isShownScreenShotPanel = !self.isShownScreenShotPanel;\r\n            _getTopLayer();\r\n            if (self.topsideLayer != null) {\r\n                //获取当前最高图层信息\r\n\r\n                var m_ShptAPI = '';\r\n                if (self.topsideLayer.screenshotUrl) {\r\n                    m_ShptAPI = self.topsideLayer.screenshotUrl;\r\n                }\r\n                else {\r\n\r\n                }\r\n\r\n                var m_ShotParam = self.topsideLayer.screenshotparam;\r\n                //获取当前选择时间\r\n                var m_TimeNow = moment(timeLine.GetShowDate()).utc();\r\n                //年月日替换\r\n                if (m_ShptAPI.indexOf('yyyy') > 0) {\r\n                    m_ShptAPI = m_ShptAPI.replace('yyyy', m_TimeNow.format(\"YYYY\"));\r\n                }\r\n                if (m_ShptAPI.indexOf('MM') > 0) {\r\n                    m_ShptAPI = m_ShptAPI.replace('MM', m_TimeNow.format(\"MM\"));\r\n                }\r\n                if (m_ShptAPI.indexOf('dd') > 0) {\r\n                    m_ShptAPI = m_ShptAPI.replace('dd', m_TimeNow.format(\"DD\"));\r\n                }\r\n                if (m_ShptAPI.indexOf('hh') > 0) {\r\n                    m_ShptAPI = m_ShptAPI.replace('hh', m_TimeNow.format(\"HH\"));\r\n                }\r\n                if (m_ShptAPI.indexOf('mm') > 0) {\r\n                    m_ShptAPI = m_ShptAPI.replace('mm', m_TimeNow.format(\"mm\"));\r\n                }\r\n                //向init传递参数\r\n                screenshots.init(m_ShptAPI, m_ShotParam);\r\n            }\r\n            else {\r\n                screenshots.init('', '');\r\n            }\r\n        }\r\n\r\n        self.is3Dinit = false;\r\n        self.switch3D = _switch3D;\r\n        /*3D 切换函数*/\r\n        function _switch3D() {\r\n            //  console.log(\"_switch3D\");\r\n            if (self.isShown3D === false) {\r\n                //当前为2D 显示 切换显示3D\r\n                //_clearLayers();\r\n                self.isShown3D = true;\r\n                document.getElementsByClassName(\"glyphicon-mapType\")[0].innerText = \"2D\";\r\n                ShinetekView.SatelliteView.setMapFun(\"3D\");\r\n                //若未进行初始化 则 初始化\r\n                if (!self.is3Dinit) {\r\n                    ShinetekView.SatelliteView.init(\"http://10.24.10.108/IMAGEL2/GBAL/\");\r\n                    //将初始化 标志位\r\n                    self.is3Dinit = true;\r\n                    _refreshLayers();\r\n                }\r\n                else {\r\n                    //若已经初始化 则移除当前所有显示图层 并重新刷新加载\r\n                    ShinetekView.SatelliteView.removeAllLayer();\r\n                    _refreshLayers();\r\n                }\r\n            }\r\n            else {\r\n                self.isShown3D = false;\r\n                document.getElementsByClassName(\"glyphicon-mapType\")[0].innerText = \"3D\";\r\n                ShinetekView.SatelliteView.setMapFun(\"2D\");\r\n                _refreshLayers();\r\n            }\r\n\r\n\r\n            //  ShinetekView.Ol3Opt.init(\"http://10.24.10.108/IMAGEL2/GBAL/\");\r\n\r\n\r\n        }\r\n\r\n        /* 切换时 删除所有当前图层*/\r\n        function _clearLayers() {\r\n\r\n            self.overLays.forEach(function (layModule) {\r\n                _removeLayFromWMS(layModule);\r\n\r\n            });\r\n            self.overLays = [];\r\n            self.baseLays.forEach(function (layModule) {\r\n                _removeLayFromWMS(layModule);\r\n            });\r\n            self.baseLays = [];\r\n        }\r\n\r\n        /**\r\n         * 重载所有已添加的图层\r\n         * @private\r\n         */\r\n        function _refreshLayers() {\r\n            var tmpList = [];\r\n            //记住一条 图层列表 先进后出 才能保证 后加的在先加的之上；\r\n            self.overLays.forEach(function (layModule) {\r\n                //_removeLayFromWMS(layModule);\r\n                //_addLayToWMS(layModule);\r\n                tmpList.unshift(layModule);\r\n            });\r\n            self.baseLays.forEach(function (layModule) {\r\n                //_removeLayFromWMS(layModule);\r\n                //_addLayToWMS(layModule);\r\n                tmpList.unshift(layModule);\r\n            });\r\n\r\n            /* for (var i = 0; i < tmpList.length; i++) {\r\n             _removeLayFromWMS(tmpList[i]);\r\n             _addLayToWMS(tmpList[i]);\r\n             }*/\r\n\r\n            for (var i = 0; i < tmpList.length; i++) {\r\n                var layadd = 30 + i;\r\n                try {\r\n                    ShinetekView.SatelliteView.setZIndex(tmpList[i]._id, layadd);\r\n                } catch (err) {\r\n                }\r\n            }\r\n            _ResetDatOrder();\r\n\r\n        }\r\n\r\n        function _reloadLayers() {\r\n            var tmpList = [];\r\n            //记住一条 图层列表 先进后出 才能保证 后加的在先加的之上；\r\n            self.overLays.forEach(function (layModule) {\r\n                //_removeLayFromWMS(layModule);\r\n                //_addLayToWMS(layModule);\r\n                tmpList.unshift(layModule);\r\n            });\r\n            self.baseLays.forEach(function (layModule) {\r\n                //_removeLayFromWMS(layModule);\r\n                //_addLayToWMS(layModule);\r\n                tmpList.unshift(layModule);\r\n            });\r\n\r\n            for (var i = 0; i < tmpList.length; i++) {\r\n                _removeLayFromWMS_OnlyShow(tmpList[i]);\r\n                _addLayToWMS_OnlyChange(tmpList[i]);\r\n            }\r\n\r\n            /* for (var i = 0; i < tmpList.length; i++) {\r\n             var layadd = 30 + i;\r\n             // var _id = tmpList._id;\r\n             ShinetekView.SatelliteView.setZIndex(tmpList[i]._id, layadd);\r\n             }*/\r\n\r\n\r\n        }\r\n\r\n        /**\r\n         * 根据当前baseLays 重新设置顺序\r\n         * @private\r\n         */\r\n        function _ResetDatOrder() {\r\n            //根据图层顺序\r\n            var newListOrder = [];\r\n            self.baseLays.forEach(function (layModule) {\r\n                var m_DataItem = [];\r\n                m_DataItem.DataName = layModule.projectName + layModule._id;\r\n                m_DataItem.Layeris_Show = layModule.isShow;\r\n                newListOrder.push(m_DataItem);\r\n            });\r\n            //重设\r\n            timeLine.ReSetLayerList(newListOrder);\r\n        }\r\n\r\n        /**\r\n         * 刷新 保存 cookies 中图层信息的属性 关闭网页时调用\r\n         * @private\r\n         */\r\n        function _refreshLaysCookies() {\r\n\r\n            localStorage.removeItem(\"overLays\");\r\n            localStorage.removeItem(\"baseLays\");\r\n            localStorage.setItem(\"overLays\", JSON.stringify(self.overLays));\r\n            localStorage.setItem(\"baseLays\", JSON.stringify(self.baseLays));\r\n\r\n\r\n            /*  localStorage.overLays = self.overLays;\r\n             localStorage.baseLays = self.baseLays;\r\n             */\r\n            /*   //删除原有图层cookies\r\n             $cookies.remove(\"overLays\");\r\n             $cookies.remove(\"baseLays\");\r\n             //设置cookies时效\r\n             var expireTime = new Date();\r\n             expireTime.setDate(expireTime.getDate() + 7000);\r\n             //加入新图层信息\r\n             $cookies.putObject(\"overLays\", self.overLays, {\r\n             'expires': expireTime\r\n             });\r\n             $cookies.putObject(\"baseLays\", self.baseLays, {\r\n             'expires': expireTime\r\n             });*/\r\n        }\r\n\r\n        /**\r\n         * 从 layerList 移除 layer 对象\r\n         * @param {Object} layer 目标图层对象\r\n         * @param {Array} layerList 所属数组\r\n         */\r\n        function _removeThisLayer(layer, layerList) {\r\n            //修复从cookies中获取的lay与当前列表lay不一致导致的取消显示后，列表勾选不取消的bug\r\n            projectList.forEach(function (lay) {\r\n                if (layer._id === lay._id) {\r\n                    lay.isSelected = false;\r\n                }\r\n            });\r\n            layer.isSelected = false;\r\n            for (var i = 0; i < layerList.length; i++) {\r\n                if (layer._id === layerList[i]._id) {\r\n                    layerList.splice(i, 1);\r\n                }\r\n            }\r\n            //移除\r\n            _removeLayFromWMS(layer);\r\n            //移除TimeLine\r\n        }\r\n\r\n\r\n        function _addThisProject(project) {\r\n            project.isSelected = !project.isSelected;\r\n\r\n            /**\r\n             * TODO: 对应的图层列表也应该发生变化\r\n             * 1. 添加到图层时 应判断是加入到 overLays 还是 baseLays中\r\n             */\r\n            if (project.layType === 'BASELAYERS') {\r\n                if (project.isSelected === true) {\r\n                    //增加\r\n                    project.isShow = true;\r\n                    self.baseLays.unshift(project);\r\n                    _addLayToWMS(project);\r\n                } else {\r\n                    //移除\r\n                    for (var i = 0; i < self.baseLays.length; i++) {\r\n                        if (project._id === self.baseLays[i]._id) {\r\n                            self.baseLays.splice(i, 1);\r\n                        }\r\n                    }\r\n                    _removeLayFromWMS(project);\r\n                }\r\n            } else {\r\n                if (project.isSelected === true) {\r\n                    //增加\r\n                    project.isShow = true;\r\n                    self.overLays.unshift(project);\r\n                    _addLayToWMS(project);\r\n                } else {\r\n                    //移除\r\n                    for (var i = 0; i < self.overLays.length; i++) {\r\n                        if (project._id === self.overLays[i]._id) {\r\n                            self.overLays.splice(i, 1);\r\n                        }\r\n                    }\r\n                    _removeLayFromWMS(project);\r\n                }\r\n            }\r\n        }\r\n\r\n        function _selectInstonAboveLayer(inst) {\r\n            self.currentInst = inst;\r\n            self.currentProjectList = inst.projectList;\r\n        }\r\n\r\n        function _isInstSelected(instName) {\r\n            return (self.currentInst === undefined) ? false : self.currentInst.instName === instName;\r\n        }\r\n\r\n        function _selectLayerItem(layer, group) {\r\n            self.layerMenuType = 'Collapse';\r\n            self.currentGroup = group;\r\n            self.currentLayer = layer;\r\n            //默认第一个仪器被选中\r\n            self.currentInst = (layer.group === undefined || layer.group.instGroupList.length < 1) ? undefined : layer.group.instGroupList[0];\r\n            //每次点击 都要在$cookies.frequentlyUsed 中增加依次计数\r\n            _frequentlyCount(layer, group.type);\r\n        }\r\n\r\n        function _frequentlyCount(layer, satType) {\r\n            var frequentlyUsed = $cookies.getObject('frequently-used');\r\n            frequentlyUsed.forEach(function (item) {\r\n                if (item.layerName === layer.layerName && item.satType === satType) {\r\n                    item.frequently++;\r\n                }\r\n            });\r\n            var expireTime = new Date();\r\n            expireTime.setDate(expireTime.getDate() + 7000);\r\n            $cookies.putObject('frequently-used', frequentlyUsed, {\r\n                'expires': expireTime\r\n            });\r\n        }\r\n\r\n        /**\r\n         * 初始化图层列表\r\n         * @param cb\r\n         * @private\r\n         */\r\n        function _initLayerMenuModal(cb) {\r\n            WorldviewServices.getLayerGroupList(function (data) {\r\n                self.tabGroups.splice(0, self.tabGroups.length);\r\n                data.data.forEach(function (item) {\r\n                    if (item.pictureUrl === \"\") {\r\n                        item.pictureUrl = 'publics/Black.png';\r\n                    }\r\n                    var isExistTabGroup = false;\r\n                    for (var i = 0; i < self.tabGroups.length; i++) {\r\n                        if (self.tabGroups[i].type === item.type) {\r\n                            self.tabGroups[i].allLayGroups.push(item);\r\n                            isExistTabGroup = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isExistTabGroup) {\r\n                        var tabGroup = {\r\n                            type: item.type,\r\n                            typeName: item.typeName,\r\n                            allLayGroups: [],\r\n                            frequentlyLayers: []\r\n                        };\r\n                        tabGroup.allLayGroups.push(item);\r\n                        self.tabGroups.push(tabGroup);\r\n                    }\r\n                });\r\n                if (self.tabGroups !== null && self.tabGroups !== undefined && self.tabGroups.length > 0) {\r\n                    self.currentTabGroup = self.tabGroups[0];\r\n                }\r\n\r\n\r\n                /**\r\n                 * 初始化常用图层\r\n                 * cookie 如果不存在常用图层 则创建一个\r\n                 */\r\n                _initFrequentlyLayers();\r\n\r\n\r\n                //获取实际产品列表\r\n                WorldviewServices.getProjectInfoList(function (data) {\r\n\r\n                    projectList = [];\r\n\r\n                    //为每一个产品对象增加 [isSelected]属性\r\n                    //为每个产品对象增加一个 z-index 属性\r\n                    data.data.forEach(function (item) {\r\n                        item = _addAttributeToLayObj(item);\r\n                        projectList.push(item);\r\n                    });\r\n\r\n\r\n                    //1. 为分组生成仪器列表\r\n                    var layerGroupList = _groupProjectList(data);\r\n\r\n                    //2. 将结果放入对应的分组\r\n                    for (var xi = 0; xi < self.tabGroups.length; xi++) {\r\n                        self.tabGroups[xi].allLayGroups.forEach(function (item) {\r\n                            for (var i = 0; i < item.layers.length; i++) {\r\n                                var layer = item.layers[i];\r\n                                for (var j = 0; j < layerGroupList.length; j++) {\r\n                                    var layerGroup = layerGroupList[j];\r\n                                    if (layer.layerName === layerGroup.layerName && layerGroup.satType === item.type) {\r\n                                        layer.group = layerGroup;\r\n                                        layer.instString = '';\r\n                                        var instGroup = layerGroup.instGroupList;\r\n                                        instGroup.forEach(function (inst) {\r\n                                            layer.instString += inst.instName + ' ';\r\n                                        });\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        // 同时放入常用图层分组\r\n                        self.tabGroups[xi].frequentlyLayers.forEach(function (item) {\r\n                            for (var j = 0; j < layerGroupList.length; j++) {\r\n                                var layerGroup = layerGroupList[j];\r\n                                if (item.layerName === layerGroup.layerName && layerGroup.satType === item.satType) {\r\n                                    item.group = layerGroup;\r\n                                    item.instString = '';\r\n                                    var instGroup = layerGroup.instGroupList;\r\n                                    instGroup.forEach(function (inst) {\r\n                                        item.instString += inst.instName + ' ';\r\n                                    });\r\n                                    break;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    if (cb !== undefined) {\r\n                        cb();\r\n                    }\r\n\r\n                }, function (res) {\r\n\r\n                });\r\n\r\n            }, function (res) {\r\n\r\n            });\r\n        }\r\n\r\n        /**\r\n         * 为每一个产品对象增加属性\r\n         * @param projectObj\r\n         * @private\r\n         */\r\n        function _addAttributeToLayObj(projectObj) {\r\n\r\n            /**\r\n             * 为每一个产品对象增加 [isSelected]属性\r\n             * 该属性用于控制产品对象是否被选中加入图层列表中。\r\n             * @type {boolean}\r\n             */\r\n            projectObj.isSelected = false;\r\n\r\n            /**\r\n             * 该属性用于控制产品对象在openlayer中显示或隐藏。\r\n             * 默认为 显示\r\n             */\r\n            projectObj.isShow = true;\r\n\r\n            /**\r\n             * 为每个产品对象增加一个 z-index 属性\r\n             * 该选项用于在加入图层列表后标识应处于的层级\r\n             * @type {number}\r\n             */\r\n            projectObj.zIndex = 0;\r\n\r\n            return projectObj;\r\n        }\r\n\r\n        /**\r\n         * 初始化常用图层列表\r\n         * @param {type} name description\r\n         */\r\n        function _initFrequentlyLayers() {\r\n            var frequentlyUsed = $cookies.getObject('frequently-used');\r\n            if (frequentlyUsed === undefined) {\r\n                // cookie 如果不存在常用图层 则创建一个\r\n                var frequentlyUsed = [];\r\n\r\n                for (var xi = 0; xi < self.tabGroups.length; xi++) {\r\n                    self.tabGroups[xi].allLayGroups.forEach(function (item) {\r\n                        for (var i = 0; i < item.layers.length; i++) {\r\n                            var layer = item.layers[i];\r\n                            var isExistLayer = false;\r\n                            for (var j = 0; j < frequentlyUsed.length; j++) {\r\n                                if (frequentlyUsed[j].layerName === layer.layerName && frequentlyUsed[j].satType === layer.satType) {\r\n                                    isExistLayer = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (isExistLayer === false) {\r\n                                layer.frequently = 0;\r\n                                layer.satType = item.type;\r\n                                frequentlyUsed.push(layer);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                var expireTime = new Date();\r\n                expireTime.setDate(expireTime.getDate() + 7000);\r\n                $cookies.putObject('frequently-used', frequentlyUsed, {\r\n                    'expires': expireTime\r\n                });\r\n            } else {\r\n                // filter data by satType\r\n                for (var xi = 0; xi < self.tabGroups.length; xi++) {\r\n                    var tmp = [];\r\n                    var satType = self.tabGroups[xi].type;\r\n                    frequentlyUsed.forEach(function (item) {\r\n                        if (item.satType === satType) {\r\n                            tmp.push(item);\r\n                        }\r\n                    });\r\n                    tmp.sort(function (a, b) {\r\n                        return -(a.frequently - b.frequently);\r\n                    });\r\n                    self.tabGroups[xi].frequentlyLayers.splice(0, self.frequentlyLayers.length);\r\n                    var maxLength = (tmp.length > 5) ? 5 : tmp.length;\r\n                    for (var k = 0; k < maxLength; k++) {\r\n                        if (tmp[k].frequently != 0) {\r\n                            self.tabGroups[xi].frequentlyLayers.push(tmp[k]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // frequentlyUsed.sort(function (a, b) {\r\n                //     return -(a.frequently - b.frequently);\r\n                // });\r\n                // self.frequentlyLayers.splice(0, self.frequentlyLayers.length);\r\n                // var maxLength = (frequentlyUsed.length > 5) ? 5 : frequentlyUsed.length;\r\n                // for (var k = 0; k < maxLength; k++) {\r\n                //     if (frequentlyUsed[k].frequently != 0) {\r\n                //         self.frequentlyLayers.push(frequentlyUsed[k]);\r\n                //     }\r\n                // }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 初始化图层组、卫星仪器、产品的分组列表\r\n         *\r\n         * @param {any} data\r\n         * @returns\r\n         */\r\n        function _groupProjectList(data) {\r\n            //1. 为分组生成仪器列表\r\n\r\n            var instGroup = {\r\n                instName: '',\r\n                projectList: []\r\n            };\r\n\r\n            var layerGroup = {\r\n                layerName: '',\r\n                instString: '',\r\n                instGroupList: []\r\n            };\r\n\r\n            var layerGroupList = [];\r\n\r\n            data.data.forEach(function (item) {\r\n                var isExistLayerGroup = false;\r\n                for (var i = 0; i < layerGroupList.length; i++) {\r\n                    var tmpLayerGroup = layerGroupList[i];\r\n                    if (tmpLayerGroup.layerName === item.layerName && tmpLayerGroup.satType === item.satType) {\r\n                        isExistLayerGroup = true;\r\n                        //存在 此layerGroup 则看看instName 是否存在\r\n                        var isExistInstGroup = false;\r\n                        for (var j = 0; j < tmpLayerGroup.instGroupList.length; j++) {\r\n                            var tmpInstGroup = tmpLayerGroup.instGroupList[j];\r\n                            if (tmpInstGroup.instName === (item.satID + '/' + item.instID)) {\r\n                                isExistInstGroup = true;\r\n                                //存在 此instGroup 看看project 是否存在\r\n                                var isExistProject = false;\r\n                                for (var k = 0; k < tmpInstGroup.projectList.length; k++) {\r\n                                    var tmpProject = tmpInstGroup.projectList[k];\r\n                                    if (tmpProject.projectName === item.projectName) {\r\n                                        //存在 此project\r\n                                        isExistProject = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                if (isExistProject === false) {\r\n                                    //不存在 此project\r\n                                    tmpInstGroup.projectList.push(item);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (isExistInstGroup === false) {\r\n                            //不存在 此instGroup 创建新的 instGroup\r\n                            var tmpInstGroup = {\r\n                                instName: item.satID + '/' + item.instID,\r\n                                satType: item.satType,\r\n                                projectList: []\r\n                            }\r\n\r\n                            tmpInstGroup.projectList.push(item);\r\n                            tmpLayerGroup.instGroupList.push(tmpInstGroup);\r\n                        }\r\n                    }\r\n                }\r\n                if (isExistLayerGroup === false) {\r\n                    //不存在 此layerGroup 创建新的 layerGroup\r\n                    var tmpLayerGroup = {\r\n                        layerName: item.layerName,\r\n                        satType: item.satType,\r\n                        instGroupList: []\r\n                    }\r\n\r\n                    var tmpInstGroup = {\r\n                        instName: item.satID + '/' + item.instID,\r\n                        projectList: []\r\n                    }\r\n\r\n                    tmpInstGroup.projectList.push(item);\r\n                    tmpLayerGroup.instGroupList.push(tmpInstGroup);\r\n                    layerGroupList.push(tmpLayerGroup);\r\n                }\r\n            });\r\n\r\n            return layerGroupList;\r\n        }\r\n\r\n        /**\r\n         * 点击显示图层选择模态框\r\n         */\r\n        function _showLayerMenu() {\r\n            layerMenu.modal({\r\n                backdrop: 'static',\r\n                keyboard: false\r\n            });\r\n        }\r\n\r\n        /**\r\n         * 点击加载或隐藏图层\r\n         * @param layModule\r\n         * @private\r\n         */\r\n        function _eyeClick(layModule) {\r\n            layModule.isShow = !layModule.isShow;\r\n\r\n            try {\r\n                _setVisibilityFromWMS(layModule);\r\n            } catch (err) {\r\n\r\n            }\r\n            _ResetDatOrder();\r\n        }\r\n\r\n        /**\r\n         * 往控件中添加图层\r\n         * @param layModule\r\n         * @private\r\n         */\r\n        function _addLayToWMS(layModule) {\r\n\r\n\r\n\r\n            // 待测试 如果为OVERLAYERS图层 则使用 原IndexZ 添加3000 liuyp\r\n            if (layModule.layType === \"OVERLAYERS\") {\r\n                ShinetekView.SatelliteView.addLayer(layModule._id, layModule.layerName, layModule.projectUrl, \"false\", layModule.mapType);\r\n                var layadd = 30000;\r\n                if (ShinetekView.SatelliteView.getZIndex(layModule._id)) {\r\n                    layadd = ShinetekView.SatelliteView.getZIndex(layModule._id) + 30000;\r\n                }\r\n                ShinetekView.SatelliteView.setZIndex(layModule._id, layadd);\r\n            }\r\n            /*  if (layModule.isShow === false) {\r\n             _setVisibilityFromWMS(layModule);\r\n             }*/\r\n            //只对base的数据进行排序\r\n            if (layModule.layType !== \"OVERLAYERS\") {\r\n                //获取数据存在列表\r\n                //如果数据存在列表中已有此layModule的对象 则不在重新获取数据\r\n                _getDataExistList(layModule, false, function (m_timeLineList) {\r\n                    //根据列表反向查找， 再次添加\r\n\r\n                    timeLine.AddMinuteData(m_timeLineList);\r\n                    var timeFindJson = timeLine.findDataExistList(layModule.projectName + layModule._id);\r\n                    var timeSelectStr = timeFindJson;\r\n                    var projectUrl = layModule.projectUrl;\r\n                    projectUrl = projectUrl.replace('yyyyMMddHHmmss', timeSelectStr);\r\n                    ShinetekView.SatelliteView.addLayer(layModule._id, layModule.layerName, projectUrl, \"false\", layModule.mapType);\r\n                    if (layModule.isShow === false) {\r\n                        _setVisibilityFromWMS(layModule);\r\n                    }\r\n                    _refreshLayers();\r\n                    //_ResetDatOrder();\r\n                });\r\n\r\n                //获取图层调色板\r\n                _getProjectPalette(layModule, function (err, paletteModule) {\r\n                    if (err) {\r\n                        console.log(err);\r\n                    }\r\n                    if (paletteModule !== undefined) {\r\n                        var paletteDivID = \"palette\" + layModule._id;\r\n                        var palette = new Palette();\r\n                        palette.init_palette(paletteDivID, paletteModule);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        function _addLayToWMS_OnlyChange(layModule) {\r\n\r\n            if (layModule.layType === \"OVERLAYERS\") {\r\n                ShinetekView.SatelliteView.addLayer(layModule._id, layModule.layerName, layModule.projectUrl, \"false\", layModule.mapType);\r\n            }\r\n            if (layModule.layType !== \"OVERLAYERS\") {\r\n                var timeFindJson = timeLine.findDataExistList(layModule.projectName + layModule._id);\r\n                var timeSelectStr = timeFindJson;\r\n                var projectUrl = layModule.projectUrl;\r\n                projectUrl = projectUrl.replace('yyyyMMddHHmmss', timeSelectStr);\r\n                ShinetekView.SatelliteView.addLayer(layModule._id, layModule.layerName, projectUrl, \"false\", layModule.mapType);\r\n            }\r\n            if (layModule.isShow === false) {\r\n                _setVisibilityFromWMS(layModule);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 获取产品调色板\r\n         * @param {Object} layModule\r\n         * @param {Function} next\r\n         */\r\n        function _getProjectPalette(layModule, next) {\r\n            if (layModule.paletteUrl === undefined || layModule.paletteUrl === \"\") {\r\n                next(null, undefined);\r\n            } else {\r\n                WorldviewServices.getProjectPalette(layModule.paletteUrl, function (res) {\r\n                    next(null, res);\r\n                }, function (res) {\r\n                    next(new Error(\"获取调色板失败，请检查产品配置\"), undefined);\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 从WMS控件中移除图层\r\n         * @param layModule\r\n         * @private\r\n         */\r\n        function _removeLayFromWMS(layModule) {\r\n            ShinetekView.SatelliteView.removeLayer(layModule._id, layModule.mapType);\r\n\r\n\r\n            //对基准图进行操作不影响数据图层\r\n            if (layModule.layType != \"OVERLAYERS\") {\r\n                _removeDataExistList(layModule);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 只移除显示部分\r\n         * @param layModule\r\n         * @private\r\n         */\r\n        function _removeLayFromWMS_OnlyShow(layModule) {\r\n            ShinetekView.SatelliteView.removeLayer(layModule._id, layModule.mapType);\r\n        }\r\n\r\n\r\n        /**\r\n         * 根据传入的图层 控制其显示与隐藏\r\n         *\r\n         * @param {any} layModule\r\n         */\r\n        function _setVisibilityFromWMS(layModule) {\r\n            //   ShinetekView.SatelliteView.setVisibility(layModule._id, layModule.mapType, layModule.isShow);\r\n            ShinetekView.SatelliteView.setVisibility(layModule._id, layModule.mapType, layModule.isShow);\r\n        }\r\n\r\n\r\n        /**\r\n         * 根据传入的图层对象 获取其数据存在列表 添加年月日全数据\r\n         * @param {Object} layModule 图层对象（产品对象）\r\n         * @param {Function} next callback\r\n         * @callback next\r\n         */\r\n        function _getDataExistList_H8(layModule, next) {\r\n            if (layModule.dataListUrl === '') {\r\n                return;\r\n            }\r\n            WorldviewServices.getDataExistList(layModule.dataListUrl, function (data) {\r\n                var m_timeLineListMinutes = [];\r\n                //    var timeLineObj = {};\r\n                if (data.dataList_Minute !== undefined && data.dataList_Minute.length > 0) {\r\n\r\n                    //分钟数据\r\n                    var timeLineObj_Min = {\r\n                        DataName: layModule.projectName + layModule._id,\r\n                        DataInfo: data.dataList_Minute,\r\n                        Layeris_Show: true\r\n                    };\r\n                    //日数据\r\n                    var timeLineObj_Day = {\r\n                        DataName: layModule.projectName + layModule._id,\r\n                        DataInfo: data.dataList_Day,\r\n                        Layeris_Show: true\r\n                    };\r\n                    //月数据\r\n                    var timeLineObj_Month = {\r\n                        DataName: layModule.projectName + layModule._id,\r\n                        DataInfo: data.dataList_Month,\r\n                        Layeris_Show: true\r\n                    };\r\n                    //年数据\r\n                    var timeLineObj_Year = {\r\n                        DataName: layModule.projectName + layModule._id,\r\n                        DataInfo: data.dataList_Year,\r\n                        Layeris_Show: true\r\n                    };\r\n                    m_timeLineListMinutes.push(timeLineObj_Min);\r\n                    m_timeLineListMinutes.push(timeLineObj_Day);\r\n                    m_timeLineListMinutes.push(timeLineObj_Month);\r\n                    m_timeLineListMinutes.push(timeLineObj_Year);\r\n                    next(m_timeLineListMinutes);\r\n                }\r\n            }, function (data) {\r\n                var m_timeLineListMinutes = [];\r\n                //失败也需要使用名称进行占位\r\n                //分钟数据\r\n                var timeLineObj_Min = {\r\n                    DataName: layModule.projectName + layModule._id,\r\n                    DataInfo: [],\r\n                    Layeris_Show: true\r\n                };\r\n                //日数据\r\n                var timeLineObj_Day = {\r\n                    DataName: layModule.projectName + layModule._id,\r\n                    DataInfo: [],\r\n                    Layeris_Show: true\r\n                };\r\n                //月数据\r\n                var timeLineObj_Month = {\r\n                    DataName: layModule.projectName + layModule._id,\r\n                    DataInfo: [],\r\n                    Layeris_Show: true\r\n                };\r\n                //年数据\r\n                var timeLineObj_Year = {\r\n                    DataName: layModule.projectName + layModule._id,\r\n                    DataInfo: [],\r\n                    Layeris_Show: true\r\n                };\r\n                m_timeLineListMinutes.push(timeLineObj_Min);\r\n                m_timeLineListMinutes.push(timeLineObj_Day);\r\n                m_timeLineListMinutes.push(timeLineObj_Month);\r\n                m_timeLineListMinutes.push(timeLineObj_Year);\r\n                next(m_timeLineListMinutes);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * 获取数据存在性列表函数\r\n         * 获取逻辑：\r\n         * 当flg === true时 直接从网络获取列表\r\n         * 当flg === false时 优先从本地获取，失败后从网络获取\r\n         * @param layModule\r\n         * @param flg\r\n         * @param next\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        function _getDataExistList(layModule, flg, next) {\r\n            if (layModule.dataListUrl === '') {\r\n                return;\r\n            }\r\n            var isFind = false;\r\n            var m_timeLineListMinutes = [];\r\n            if (!flg) {\r\n                for (var i = 0; i < timeLineListDataAll.length; i++) {\r\n                    if (timeLineListDataAll[i].DataName ===\r\n                        layModule.projectName + layModule._id &&\r\n                        (timeLineListDataAll[i].DataInfoYear.length > 0 ||\r\n                        timeLineListDataAll[i].DataInfoMonth.length > 0 ||\r\n                        timeLineListDataAll[i].DataInfoDay.length > 0 ||\r\n                        timeLineListDataAll[i].DataInfoMinute.length > 0)) {\r\n\r\n                        isFind = true;\r\n                        m_timeLineListMinutes.push(timeLineListDataAll[i]);\r\n\r\n                        return next(m_timeLineListMinutes);\r\n                        //    break;\r\n                    }\r\n                }\r\n            }\r\n            if (!isFind) {\r\n                WorldviewServices.getDataExistList(layModule.dataListUrl, function (data) {\r\n                    if (data) {\r\n                        //分钟数据\r\n                        var timeLineObj_Min = {\r\n                            DataName: layModule.projectName + layModule._id,\r\n                            DataInfoYear: data.DataInfoYear,\r\n                            DataInfoMonth: data.DataInfoMonth,\r\n                            DataInfoDay: data.DataInfoDay,\r\n                            DataInfoMinute: data.DataInfoMinute,\r\n                            Layeris_Show: true\r\n                        };\r\n                        m_timeLineListMinutes.push(timeLineObj_Min);\r\n                        timeLineListDataAll.push(timeLineObj_Min);\r\n                        next(m_timeLineListMinutes);\r\n                    }\r\n                }, function (data) {\r\n                    // var m_timeLineListMinutes = [];\r\n                    //失败也需要使用名称进行占位\r\n                    //整体数据\r\n                    var timeLineObj_Min = {\r\n                        DataName: layModule.projectName + layModule._id,\r\n                        DataInfoYear: [],\r\n                        DataInfoMonth: [],\r\n                        DataInfoDay: [],\r\n                        DataInfoMinute: [],\r\n                        Layeris_Show: true\r\n                    };\r\n                    m_timeLineListMinutes.push(timeLineObj_Min);\r\n                    timeLineListDataAll.push(timeLineObj_Min);\r\n                    next(m_timeLineListMinutes);\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * _getDataExistList 对于数组数据的异步回调封装\r\n         * @param sideLayerModules\r\n         * @param next\r\n         * @private\r\n         */\r\n        function _getDataExistListByList(sideLayerModules, next) {\r\n            if (sideLayerModules.length === 0) {\r\n                return next(self.tmpTimeLineList);\r\n            }\r\n            var tmpLayerModule = sideLayerModules.shift();\r\n            _getDataExistList(tmpLayerModule, true, function (m_timeLineList) {\r\n                m_timeLineList.forEach(function (item) {\r\n                    self.tmpTimeLineList.push(item);\r\n                });\r\n                _getDataExistListByList(sideLayerModules, next);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * 移除当前显示的列表\r\n         * @param layModule\r\n         * @private\r\n         */\r\n        function _removeDataExistList(layModule) {\r\n            //移除函数\r\n            timeLine.RemoveLayerDataByName(layModule.projectName + layModule._id);\r\n        }\r\n\r\n\r\n        /**\r\n         * 根据传入的图层列表 初始化map控件\r\n         * @param lays (self.baseLays + self.overLays)\r\n         * @private\r\n         */\r\n        function _initMap() {\r\n            //根据配置初始化底图\r\n            ShinetekView.SatelliteView.init(Config_Total.BASETILEURL);\r\n            //ShinetekView.Ol3Opt.init(Config_Total.BASETILEURL);\r\n            //初始化截图框\r\n            $(\"#snapshot\").load(\"lib/screenshot/photo.html\", function () {\r\n                // screenshots.init(\"http://img1.3lian.com/2015/w7/98/d/22\");\r\n            });\r\n        }\r\n\r\n\r\n        /**\r\n         * 生成一个初始化的lays清单。\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        function _initLays() {\r\n\r\n            /**\r\n             * 一定在这里要注意图层的顺序\r\n             * 由于OpenLayer无法控制\r\n             */\r\n\r\n            projectList.forEach(function (lay) {\r\n\r\n                if (lay.isDefault === true) {\r\n                    if (lay.layType === 'BASELAYERS') {\r\n                        self.baseLays.push(lay);\r\n                    } else\r\n                        self.overLays.push(lay);\r\n                    lay.isSelected = true;\r\n                    _addLayToWMS(lay);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * 从cookie中获取上次保存的列表\r\n         * @private\r\n         */\r\n        function _initLaysbycondition() {\r\n            //baseLays 获取cookies\r\n            var m_baseLays = JSON.parse(localStorage.getItem(\"baseLays\"));\r\n            var m_overLays = JSON.parse(localStorage.getItem(\"overLays\"));\r\n            if (m_baseLays === null || m_overLays === null) {\r\n                _initLays();\r\n            } else {\r\n                //修改为缓存图层为空时，自动添加新图层\r\n                if (m_baseLays.length > 0 || m_overLays.length > 0) {\r\n                    //进行初始化 根据 cookies 进行初始化\r\n                    _initLaysFromCookies();\r\n                } else {\r\n                    //根据数据库基础数据信息进行初始化\r\n                    _initLays();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 根据cookies初始化图层列表\r\n         * @private\r\n         */\r\n        function _initLaysFromCookies() {\r\n            //baseLays 获取cookies\r\n            /*  var m_baseLays = $cookies.getObject('baseLays');\r\n             var m_overLays = $cookies.getObject('overLays');*/\r\n            //若Cookies m_baseLays 不为空 加入列表 并加入界面显示\r\n            var m_baseLays = JSON.parse(localStorage.getItem(\"baseLays\"));\r\n            var m_overLays = JSON.parse(localStorage.getItem(\"overLays\"));\r\n            if (m_baseLays) {\r\n                //遍历添加数据\r\n                m_baseLays.forEach(function (lay) {\r\n                    //判断当前现有列表中 是否存在缓存数据\r\n                    var is_In = false;\r\n                    self.baseLays.forEach(function (layBase) {\r\n                        ////使用——id 判断 唯一性标识\r\n                        if (layBase._id === lay._id) {\r\n                            is_In = true;\r\n                        }\r\n                    });\r\n                    if (!is_In) {\r\n                        self.baseLays.push(lay);\r\n                        _addLayToWMS(lay);\r\n                    }\r\n                });\r\n            }\r\n            //若Cookies m_overLays 不为空 加入列表 并加入界面显示\r\n            if (m_overLays) {\r\n                m_overLays.forEach(function (lay) {\r\n                    //判断当前现有列表中 是否存在缓存数据 与配置中的设置部分叠加\r\n                    var is_In = false;\r\n                    self.overLays.forEach(function (layBase) {\r\n                        //使用——id 判断 唯一性标识\r\n                        if (layBase._id === lay._id) {\r\n                            is_In = true;\r\n                        }\r\n                    });\r\n                    if (!is_In) {\r\n                        self.overLays.push(lay);\r\n                        _addLayToWMS(lay);\r\n                    }\r\n                });\r\n            }\r\n            //遍历显示列表\r\n            projectList.forEach(function (lay) {\r\n                self.baseLays.forEach(function (inlay) {\r\n                    if (inlay._id === lay._id) {\r\n                        lay.isSelected = true;\r\n                    }\r\n                });\r\n                self.overLays.forEach(function (inlay) {\r\n                    if (inlay._id === lay._id) {\r\n                        lay.isSelected = true;\r\n                    }\r\n                });\r\n            });\r\n\r\n            //   _reloadLayers();\r\n        }\r\n\r\n        /**\r\n         * 时间轴初始化\r\n         * @private\r\n         */\r\n        function _initTimeLine() {\r\n            timeLine.init(\"timeLine\", \"MINUTE\");\r\n        }\r\n\r\n        /**\r\n         * 初始化函数\r\n         * @private\r\n         */\r\n        function _init() {\r\n\r\n            //初始化video动画播放时间范围\r\n            var tmp = moment(new Date());\r\n            self.videoEndTime = moment(tmp.add(1, \"h\").format(\"YYYY-MM-DD HH:00:00\"));\r\n            self.videoStartTime = moment(tmp.add(-1, \"d\").format(\"YYYY-MM-DD HH:00:00\"));\r\n\r\n            //初始化图层列表\r\n            _initLayerMenuModal(function () {\r\n\r\n                try {\r\n                    //根据默认图层初始化openlayer\r\n                    _initMap();\r\n\r\n                    //根据当前COOKIES条件对图层信息进行初始化，若当前不存在图层信息缓存，则使用数据库返回默认配置信息刷新\r\n                    _initLaysbycondition();\r\n                } catch (err) {\r\n                }\r\n                finally {\r\n                    //初始化时间轴控件\r\n                    _initTimeLine();\r\n                    _getTopLayer();\r\n                }\r\n            });\r\n\r\n\r\n        }\r\n\r\n\r\n        function _isSelectedTab(tabName) {\r\n            return self.currentTab === tabName;\r\n        }\r\n\r\n        function _selectTab(tabName) {\r\n            self.currentTab = tabName;\r\n        }\r\n\r\n        function _isSelectedTab_LayerMenuModal(tabGroupModule) {\r\n            // if (self.currentTabGroup === undefined) {\r\n            //     self.currentTabGroup = self.tabGroups[0];\r\n            // }\r\n            return self.currentTabGroup === tabGroupModule;\r\n        }\r\n\r\n        function _selectTab_LayerMenuModal(tabGroupModule) {\r\n            self.currentTabGroup = tabGroupModule;\r\n        }\r\n\r\n        /**\r\n         * 折叠菜单栏 1隐藏\r\n         */\r\n        function _collapseMenu() {\r\n            self.isMenuCollapse = 1;\r\n        }\r\n\r\n        /**\r\n         * 展开菜单栏 0显示\r\n         */\r\n        function _extendMenu() {\r\n            self.isMenuCollapse = 0;\r\n        }\r\n\r\n        //需要进行动画的数据信息\r\n        self.animedata = [];\r\n\r\n        //定时器 动画控制 相关变量 以下变量均为未进行部分 即下一个循环需要进行的部分\r\n        self.anime_timer;\r\n        //移除图层的num 初始化 -- 0 （初始化 未进行移除，将要移除第0层数据）\r\n        var remove_layer_num = 0;\r\n        //当前现实图层num 初始化 -- 1 （初始化 显示图层0）\r\n        var show_layer_num = 1;\r\n        //添加图层num 初始化 -- 4 （初始化 添加 0 1 2 3 层，将要添加层数：4）\r\n        var add_layer_num = 4;\r\n\r\n        /**\r\n         * 点击暂停开始等调用事件\r\n         * @private\r\n         */\r\n        function _anime_Begin(timespan, callback) {\r\n            //获取动画长度\r\n            var m_NumMax = self.animedata.length;\r\n            var m_DataAll = self.animedata;\r\n\r\n            //清楚当前图层列表中的缓存部分\r\n            ShinetekView.SatelliteView.clearAnimate();\r\n            //对定时器赋值\r\n            self.anime_timer = setInterval(function () {\r\n                    //若下一个图层加载成功，则进行添加和移除\r\n\r\n                    // if (ShinetekView.SatelliteView.oGetStatus()) {\r\n\r\n\r\n                    if (ShinetekView.SatelliteView.oGetStatus()) {\r\n                        self.isWaitingShow = false;\r\n                        //判断移除值域\r\n                        if (remove_layer_num < m_NumMax) {\r\n                            //移除上一层的显示\r\n                            ShinetekView.SatelliteView.removeLayer(m_DataAll[remove_layer_num].LayerTimeName, \"TMS\");\r\n                            remove_layer_num++;\r\n                        }\r\n\r\n                        //判断当前显示值域\r\n                        if (show_layer_num < m_NumMax) {\r\n                            var m_TimeStr = \"\";\r\n\r\n                            var LayerIndex = m_DataAll[show_layer_num].LayerIndex;\r\n                            //字符串拼接 反向获取数值\r\n                            if (self.sideLayers[LayerIndex]) {\r\n\r\n                                var m_baseUrl = self.sideLayers[LayerIndex].projectUrl;\r\n                                var m_targetUrl = m_DataAll[show_layer_num].LayerTimeUrl;\r\n                                //查找年\r\n                                if (m_baseUrl.indexOf(\"yyyyMMddHHmmss\") >= 0) {\r\n                                    m_TimeStr = m_targetUrl.substr(m_baseUrl.indexOf(\"yyyyMMddHHmmss\"), 14);\r\n                                    m_TimeStr = m_TimeStr.substr(0, 4) + \"-\" + m_TimeStr.substr(4, 2) + \"-\" + m_TimeStr.substr(6, 2) + \" \"\r\n                                        + m_TimeStr.substr(8, 2) + \":\" + m_TimeStr.substr(10, 2) + \":\" + m_TimeStr.substr(12, 2);\r\n                                }\r\n\r\n                            }\r\n                            //拼接当前显示的title信息 使用<br> 换行\r\n\r\n                            var thisLayer = self.sideLayers[LayerIndex];\r\n                            //m_itemInfo.LayerIndex\r\n                            self.showAnimeTitle = thisLayer.projectName + \"(\" + show_layer_num + \"/\" + m_DataAll.length + \")\";\r\n                            var m_ShowTitle = \"星标:\" + thisLayer.satID + \" <br>\"\r\n                                + \"仪器:\" + thisLayer.instID + \"<br>\"\r\n                                + \"产品:\" + thisLayer.projectName + \"<br>\"\r\n                                + \"时次:\" + m_TimeStr;\r\n                            //     self.animation = {};\r\n                            document.getElementById(\"AnprojectName\").innerHTML = thisLayer.projectName;\r\n                            document.getElementById(\"AntimeStr\").innerHTML = m_TimeStr;\r\n                            /*    self.animation.timeStr = m_TimeStr;\r\n                             self.animation.projectName = thisLayer.projectName;*/\r\n                            ShinetekView.SatelliteView.setScreenTitle(m_ShowTitle);\r\n                            show_layer_num++;\r\n                            //   ShinetekView.Ol3Opt.setScreenTitle(show_layer_num);\r\n                            if (show_layer_num === m_NumMax) {\r\n                                //结束当前定时器\r\n                                _pauseAnime();\r\n\r\n                                callback(null, m_DataAll[show_layer_num - 1].LayerTimeName);\r\n                                return;\r\n                            }\r\n                        }\r\n                        //判断添加值域\r\n                        if (add_layer_num < m_NumMax) {\r\n                            //设置当前图层状态为显示模式\r\n                            ShinetekView.SatelliteView.addLayer(m_DataAll[add_layer_num].LayerTimeName, \"TMS3\", m_DataAll[add_layer_num].LayerTimeUrl, \"false\", \"TMS\"); //0\r\n                            ShinetekView.SatelliteView.setZIndex(m_DataAll[add_layer_num].LayerTimeName, m_DataAll[add_layer_num].LayerTimeIndexZ);\r\n\r\n\r\n                            add_layer_num++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        self.isWaitingShow = true;\r\n                    }\r\n                }\r\n                ,\r\n                timespan\r\n            );\r\n        }\r\n\r\n        /**\r\n         * 点击暂停时钟\r\n         * @private\r\n         */\r\n        function _pauseAnime() {\r\n            clearInterval(self.anime_timer);\r\n            var m_showList = [];\r\n\r\n            //移除当前显示的信息 暂停的时候个人认为不需要删除显示\r\n            // ShinetekView.Ol3Opt.setScreenTitle(\" \");\r\n            //根据当前的 remove_layer_num add_layer_num\r\n            //遍历获取 当前所有 已经添加 但是未被移除的图层名称\r\n            for (var w = remove_layer_num; w <= add_layer_num; w++) {\r\n                if (w < self.animedata.length) {\r\n                    m_showList.push(self.animedata[w].LayerTimeName);\r\n                }\r\n            }\r\n            return m_showList;\r\n        }\r\n\r\n        /**\r\n         * 初始化动画 - 预加载图层\r\n         * @param JsonData json数据内容（TimeLine 返回的,需要处理）\r\n         * @param next\r\n         * @private\r\n         */\r\n        function _initAnime(JsonData) {\r\n            //存储 JsonData\r\n            var m_TotalList = [];\r\n            self.animedata = [];\r\n            //去重复'\r\n            for (var i = 0; i < JsonData.length; i++) {\r\n\r\n                var ItemJson = JsonData[i];\r\n                var m_UrlList = ItemJson.UrlList;\r\n                var m_proid = ItemJson._id;\r\n                var index_z_max = 550;\r\n                if (ItemJson != undefined &&\r\n                    m_UrlList != undefined && m_UrlList.length > 0 &&\r\n                    m_proid != undefined) {\r\n                    //遍历 存在数据 的URL的列表\r\n                    for (var t = 0; t < m_UrlList.length; t++) {\r\n                        var m_itemInfo = [];\r\n                        m_itemInfo.LayerTimeUrl = m_UrlList[t];\r\n                        m_itemInfo.LayerIndex = i;\r\n                        m_itemInfo.LayerTimeName = m_proid + \"_\" + t;\r\n                        m_itemInfo.LayerTimeIndexZ = index_z_max + m_UrlList.length - t;\r\n                        m_TotalList.push(m_itemInfo);\r\n                    }\r\n\r\n                }\r\n            }\r\n            self.animedata = m_TotalList;\r\n            //var m_HidenList = [];\r\n            //初始化值\r\n            remove_layer_num = 0;\r\n            show_layer_num = 1;\r\n            add_layer_num = 2;\r\n            // var m_NumNow = self.animedata.length;\r\n            //20170517 修改最小动画范围小于 4的情况\r\n            if (self.animedata.length < add_layer_num) {\r\n                console.warn(\"当前设置动画最小帧数为:\" + add_layer_num + \"。\\n当前选择时间范围内，有效数据数为：\" + self.animedata.length);\r\n                add_layer_num = self.animedata.length;\r\n            }\r\n            for (var i = remove_layer_num; i < add_layer_num; i++) {\r\n                ShinetekView.SatelliteView.addLayer(self.animedata[i].LayerTimeName, \"TMS3\", self.animedata[i].LayerTimeUrl, \"false\", \"TMS\");\r\n                ShinetekView.SatelliteView.setZIndex(self.animedata[i].LayerTimeName, self.animedata[i].LayerTimeIndexZ);\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * 开始动画\r\n         * @param timespan 时间间隔 毫秒为单位 int 例如500\r\n         * @param next\r\n         * @private\r\n         */\r\n        function _startAnime(timespan, next) {\r\n            //判断 timespan 若非数字类型\r\n            if (typeof timespan != \"number\") {\r\n                timespan = parseInt(timespan);\r\n            }\r\n            //开始此次循环\r\n            if (timespan > 0) {\r\n                _anime_Begin(timespan, next);\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * 获取当前最新的URL\r\n         * 2017/11/3 修改如下内容\r\n         * 原函数获取baselayer中首个标记为显示的图层\r\n         * 现增加获取baselayer中所有标记为显示的图层\r\n         *\r\n         * @private\r\n         */\r\n        function _getTopLayer() {\r\n            var m_flag = false;\r\n            // self.sideLayers.slice(0, self.sideLayers.length);\r\n            self.sideLayers = [];\r\n            if (self.baseLays != null) {\r\n                for (var i = 0; i < self.baseLays.length; i++) {\r\n                    if (self.baseLays[i].isShow === true) {\r\n                        self.sideLayers.push(self.baseLays[i]);\r\n                        if (!m_flag) {\r\n                            if (self.baseLays[i].isShow === true) {\r\n                                self.topsideLayer = self.baseLays[i];\r\n                                m_flag = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!m_flag) {\r\n                self.topsideLayer = null;\r\n                // return false;\r\n            }\r\n            return m_flag;\r\n        }\r\n\r\n        /**\r\n         * 获取当前 字段及  layModule  范围内数据开始时间\r\n         * @param layModule\r\n         */\r\n        function _getLayerUrlReplace(layModule) {\r\n            var projectUrl = layModule.projectUrl;\r\n            var BaseTimeStr = timeLine.GetShowDate();\r\n\r\n            if (projectUrl.indexOf('yyyy') > 0) {\r\n                projectUrl = projectUrl.replace('yyyy', moment(timeLine.GetShowDate()).utc().format(\"YYYY\"));\r\n            }\r\n            return projectUrl;\r\n\r\n        }\r\n\r\n        /**\r\n         * 查找当前匹配的时间段\r\n         * @param dataInfoList\r\n         * @param dataStr\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        function _findTimeBegin(dataInfoList, dataStr) {\r\n            var dataStrNew = dataStr.format('YYYYMMDDHHmmss');\r\n            var isFind = false;\r\n            if (dataInfoList.length > 0) {\r\n                dataInfoList.forEach(function (dataInfoItem) {\r\n                    //若没有找到匹配\r\n                    if (!isFind) {\r\n                        var beginTimem = moment.utc(dataInfoItem.BeginTime);\r\n                        var endTimem = moment.utc(dataInfoItem.EndTime);\r\n                        var timeSelect = moment.utc(dataStr);\r\n                        if (timeSelect.isBetween(beginTimem, endTimem)) {\r\n                            dataStrNew = beginTimem.format('YYYYMMDDHHmm') + \"00\";\r\n                            isFind = true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            return dataStrNew;\r\n\r\n        }\r\n    }\r\n\r\n\r\n})\r\n();\r\n"]}